
reaction_game.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000216  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000028a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800060  00800060  0000028a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000028a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  000002fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000056f  00000000  00000000  000003bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000030a  00000000  00000000  0000092b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a5  00000000  00000000  00000c35  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000130  00000000  00000000  00000fdc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000295  00000000  00000000  0000110c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000020e  00000000  00000000  000013a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  000015af  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	1a c0       	rjmp	.+52     	; 0x36 <__ctors_end>
   2:	27 c0       	rjmp	.+78     	; 0x52 <__bad_interrupt>
   4:	26 c0       	rjmp	.+76     	; 0x52 <__bad_interrupt>
   6:	25 c0       	rjmp	.+74     	; 0x52 <__bad_interrupt>
   8:	e8 c0       	rjmp	.+464    	; 0x1da <__vector_4>
   a:	23 c0       	rjmp	.+70     	; 0x52 <__bad_interrupt>
   c:	22 c0       	rjmp	.+68     	; 0x52 <__bad_interrupt>
   e:	21 c0       	rjmp	.+66     	; 0x52 <__bad_interrupt>
  10:	20 c0       	rjmp	.+64     	; 0x52 <__bad_interrupt>
  12:	1f c0       	rjmp	.+62     	; 0x52 <__bad_interrupt>
  14:	1e c0       	rjmp	.+60     	; 0x52 <__bad_interrupt>
  16:	ef c0       	rjmp	.+478    	; 0x1f6 <__vector_11>
  18:	1c c0       	rjmp	.+56     	; 0x52 <__bad_interrupt>
  1a:	1b c0       	rjmp	.+54     	; 0x52 <__bad_interrupt>
  1c:	1a c0       	rjmp	.+52     	; 0x52 <__bad_interrupt>
  1e:	19 c0       	rjmp	.+50     	; 0x52 <__bad_interrupt>
  20:	18 c0       	rjmp	.+48     	; 0x52 <__bad_interrupt>
  22:	17 c0       	rjmp	.+46     	; 0x52 <__bad_interrupt>
  24:	16 c0       	rjmp	.+44     	; 0x52 <__bad_interrupt>
  26:	a0 c0       	rjmp	.+320    	; 0x168 <led_mode+0xe>
  28:	a2 c0       	rjmp	.+324    	; 0x16e <led_mode+0x14>
  2a:	a5 c0       	rjmp	.+330    	; 0x176 <led_mode+0x1c>
  2c:	a8 c0       	rjmp	.+336    	; 0x17e <led_mode+0x24>
  2e:	ab c0       	rjmp	.+342    	; 0x186 <led_mode+0x2c>
  30:	ae c0       	rjmp	.+348    	; 0x18e <led_mode+0x34>
  32:	b1 c0       	rjmp	.+354    	; 0x196 <led_mode+0x3c>
  34:	b3 c0       	rjmp	.+358    	; 0x19c <led_mode+0x42>

00000036 <__ctors_end>:
  36:	11 24       	eor	r1, r1
  38:	1f be       	out	0x3f, r1	; 63
  3a:	cf ed       	ldi	r28, 0xDF	; 223
  3c:	cd bf       	out	0x3d, r28	; 61

0000003e <__do_clear_bss>:
  3e:	20 e0       	ldi	r18, 0x00	; 0
  40:	a0 e6       	ldi	r26, 0x60	; 96
  42:	b0 e0       	ldi	r27, 0x00	; 0
  44:	01 c0       	rjmp	.+2      	; 0x48 <.do_clear_bss_start>

00000046 <.do_clear_bss_loop>:
  46:	1d 92       	st	X+, r1

00000048 <.do_clear_bss_start>:
  48:	a3 36       	cpi	r26, 0x63	; 99
  4a:	b2 07       	cpc	r27, r18
  4c:	e1 f7       	brne	.-8      	; 0x46 <.do_clear_bss_loop>
  4e:	c0 d0       	rcall	.+384    	; 0x1d0 <main>
  50:	e0 c0       	rjmp	.+448    	; 0x212 <_exit>

00000052 <__bad_interrupt>:
  52:	d6 cf       	rjmp	.-84     	; 0x0 <__vectors>

00000054 <start_game_SM>:
void start_game_SM(void)
{
	
	
	
	switch(state)
  54:	80 91 62 00 	lds	r24, 0x0062
  58:	82 30       	cpi	r24, 0x02	; 2
  5a:	31 f1       	breq	.+76     	; 0xa8 <start_game_SM+0x54>
  5c:	28 f4       	brcc	.+10     	; 0x68 <start_game_SM+0x14>
  5e:	88 23       	and	r24, r24
  60:	49 f0       	breq	.+18     	; 0x74 <start_game_SM+0x20>
  62:	81 30       	cpi	r24, 0x01	; 1
  64:	b1 f0       	breq	.+44     	; 0x92 <start_game_SM+0x3e>
  66:	08 95       	ret
  68:	84 30       	cpi	r24, 0x04	; 4
  6a:	a1 f1       	breq	.+104    	; 0xd4 <start_game_SM+0x80>
  6c:	40 f1       	brcs	.+80     	; 0xbe <start_game_SM+0x6a>
  6e:	85 30       	cpi	r24, 0x05	; 5
  70:	e1 f1       	breq	.+120    	; 0xea <__stack+0xb>
  72:	08 95       	ret
	{
		case idle:
		
		while(START_MASK != read_start_button());
  74:	63 d0       	rcall	.+198    	; 0x13c <read_start_button>
  76:	80 32       	cpi	r24, 0x20	; 32
  78:	e9 f7       	brne	.-6      	; 0x74 <start_game_SM+0x20>
unsigned char timer_control(int mode)
{
	switch(mode)
	{
	case 0:
	TCCR1B = 0b00001101;
  7a:	8d e0       	ldi	r24, 0x0D	; 13
  7c:	8e bd       	out	0x2e, r24	; 46
		case idle:
		
		while(START_MASK != read_start_button());
		
		timer_control(start);
		led_mode(LEDMODE5);	
  7e:	85 e0       	ldi	r24, 0x05	; 5
  80:	90 e0       	ldi	r25, 0x00	; 0
  82:	6b d0       	rcall	.+214    	; 0x15a <led_mode>
		while(HWREGTIMERINT != 1);
  84:	83 b3       	in	r24, 0x13	; 19
  86:	81 30       	cpi	r24, 0x01	; 1
  88:	e9 f7       	brne	.-6      	; 0x84 <start_game_SM+0x30>
			HWREGTIMERINT=0;
  8a:	13 ba       	out	0x13, r1	; 19
			state = state1;
  8c:	80 93 62 00 	sts	0x0062, r24
		break;
  90:	08 95       	ret
		
		case state1:
		led_mode(LEDMODE1);
  92:	81 e0       	ldi	r24, 0x01	; 1
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	61 d0       	rcall	.+194    	; 0x15a <led_mode>
		while(HWREGTIMERINT != 1);
  98:	83 b3       	in	r24, 0x13	; 19
  9a:	81 30       	cpi	r24, 0x01	; 1
  9c:	e9 f7       	brne	.-6      	; 0x98 <start_game_SM+0x44>
			HWREGTIMERINT=0;
  9e:	13 ba       	out	0x13, r1	; 19
			state = state2;
  a0:	82 e0       	ldi	r24, 0x02	; 2
  a2:	80 93 62 00 	sts	0x0062, r24
		break;
  a6:	08 95       	ret
		
		case state2:
		led_mode(LEDMODE2);
  a8:	82 e0       	ldi	r24, 0x02	; 2
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	56 d0       	rcall	.+172    	; 0x15a <led_mode>
		while(HWREGTIMERINT != 1);
  ae:	83 b3       	in	r24, 0x13	; 19
  b0:	81 30       	cpi	r24, 0x01	; 1
  b2:	e9 f7       	brne	.-6      	; 0xae <start_game_SM+0x5a>
			HWREGTIMERINT=0;
  b4:	13 ba       	out	0x13, r1	; 19
			state =state3;
  b6:	83 e0       	ldi	r24, 0x03	; 3
  b8:	80 93 62 00 	sts	0x0062, r24
		break;
  bc:	08 95       	ret
		
		case state3:
		led_mode(LEDMODE3);
  be:	83 e0       	ldi	r24, 0x03	; 3
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	4b d0       	rcall	.+150    	; 0x15a <led_mode>
		while(HWREGTIMERINT != 1);
  c4:	83 b3       	in	r24, 0x13	; 19
  c6:	81 30       	cpi	r24, 0x01	; 1
  c8:	e9 f7       	brne	.-6      	; 0xc4 <start_game_SM+0x70>
			HWREGTIMERINT=0;
  ca:	13 ba       	out	0x13, r1	; 19
			state = state4;
  cc:	84 e0       	ldi	r24, 0x04	; 4
  ce:	80 93 62 00 	sts	0x0062, r24
		break;
  d2:	08 95       	ret
		
		case state4:
		led_mode(LEDMODE4);
  d4:	84 e0       	ldi	r24, 0x04	; 4
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	40 d0       	rcall	.+128    	; 0x15a <led_mode>
		while(HWREGTIMERINT != 1);
  da:	83 b3       	in	r24, 0x13	; 19
  dc:	81 30       	cpi	r24, 0x01	; 1
  de:	e9 f7       	brne	.-6      	; 0xda <start_game_SM+0x86>
			HWREGTIMERINT=0;
  e0:	13 ba       	out	0x13, r1	; 19
			state = state5;
  e2:	85 e0       	ldi	r24, 0x05	; 5
  e4:	80 93 62 00 	sts	0x0062, r24
		break;
  e8:	08 95       	ret
		
		case state5:
		led_mode(LEDMODE0);
  ea:	80 e0       	ldi	r24, 0x00	; 0
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	35 d0       	rcall	.+106    	; 0x15a <led_mode>
	TCCR1B = 0b00001101;
	return 1;
	break;
	
	case 1:
	TCCR1B = 0b00000000;
  f0:	1e bc       	out	0x2e, r1	; 46
		break;
		
		case state5:
		led_mode(LEDMODE0);
		timer_control(stop);
		HWREGEXTINT=0;
  f2:	14 ba       	out	0x14, r1	; 20
		players_button(on);
  f4:	80 e0       	ldi	r24, 0x00	; 0
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	24 d0       	rcall	.+72     	; 0x142 <players_button>
		
		while(HWREGEXTINT != 1 );
  fa:	84 b3       	in	r24, 0x14	; 20
  fc:	81 30       	cpi	r24, 0x01	; 1
  fe:	e9 f7       	brne	.-6      	; 0xfa <__stack+0x1b>
		pinIn = PINB;
 100:	86 b3       	in	r24, 0x16	; 22
 102:	28 2f       	mov	r18, r24
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	30 93 61 00 	sts	0x0061, r19
 10a:	20 93 60 00 	sts	0x0060, r18
			if(pinIn & P1MASK)
 10e:	86 ff       	sbrs	r24, 6
 110:	07 c0       	rjmp	.+14     	; 0x120 <__stack+0x41>
			{
				HWREGEXTINT = 0;
 112:	14 ba       	out	0x14, r1	; 20
				players_button(off);
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	14 d0       	rcall	.+40     	; 0x142 <players_button>
				led_mode(LEDMODE7);
 11a:	87 e0       	ldi	r24, 0x07	; 7
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	1d d0       	rcall	.+58     	; 0x15a <led_mode>
			}
			if(pinIn & P2MASK)
 120:	80 91 60 00 	lds	r24, 0x0060
 124:	87 ff       	sbrs	r24, 7
 126:	07 c0       	rjmp	.+14     	; 0x136 <__stack+0x57>
				{
				HWREGEXTINT = 0;
 128:	14 ba       	out	0x14, r1	; 20
				players_button(off);
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	09 d0       	rcall	.+18     	; 0x142 <players_button>
				led_mode(LEDMODE6);
 130:	86 e0       	ldi	r24, 0x06	; 6
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	12 d0       	rcall	.+36     	; 0x15a <led_mode>
				}
		state = idle;
 136:	10 92 62 00 	sts	0x0062, r1
 13a:	08 95       	ret

0000013c <read_start_button>:



unsigned char read_start_button(void)
{
	return (PINB & START_MASK);
 13c:	86 b3       	in	r24, 0x16	; 22
}
 13e:	80 72       	andi	r24, 0x20	; 32
 140:	08 95       	ret

00000142 <players_button>:


void players_button(int mode)
{
	switch(mode)
 142:	00 97       	sbiw	r24, 0x00	; 0
 144:	19 f0       	breq	.+6      	; 0x14c <players_button+0xa>
 146:	01 97       	sbiw	r24, 0x01	; 1
 148:	21 f0       	breq	.+8      	; 0x152 <players_button+0x10>
 14a:	05 c0       	rjmp	.+10     	; 0x156 <players_button+0x14>
	{
		case 0:
		PCMSK = 0b11000000;
 14c:	80 ec       	ldi	r24, 0xC0	; 192
 14e:	80 bd       	out	0x20, r24	; 32
		break;
 150:	08 95       	ret
		
		case 1:
		PCMSK = 0b00000000;
 152:	10 bc       	out	0x20, r1	; 32
		break;
 154:	08 95       	ret
		
		default:
		PCMSK = 0b00000000;
 156:	10 bc       	out	0x20, r1	; 32
 158:	08 95       	ret

0000015a <led_mode>:


void led_mode(int mode)
{
	
		switch(mode)
 15a:	88 30       	cpi	r24, 0x08	; 8
 15c:	91 05       	cpc	r25, r1
 15e:	08 f5       	brcc	.+66     	; 0x1a2 <led_mode+0x48>
 160:	fc 01       	movw	r30, r24
 162:	ed 5e       	subi	r30, 0xED	; 237
 164:	ff 4f       	sbci	r31, 0xFF	; 255
 166:	09 94       	ijmp
		{
			case 0:
			PORTB = 0b00000000;
 168:	18 ba       	out	0x18, r1	; 24
			PORTD = 0b00000000;
 16a:	12 ba       	out	0x12, r1	; 18
			break;
 16c:	08 95       	ret
			
			case 1:
			PORTB = 0b00000001;
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	88 bb       	out	0x18, r24	; 24
			PORTD = 0b00000001;
 172:	82 bb       	out	0x12, r24	; 18
			break;
 174:	08 95       	ret
			
			case 2:
			PORTB = 0b00000010;
 176:	82 e0       	ldi	r24, 0x02	; 2
 178:	88 bb       	out	0x18, r24	; 24
			PORTD = 0b00000010;
 17a:	82 bb       	out	0x12, r24	; 18
			break;
 17c:	08 95       	ret
			
			case 3:
			PORTB = 0b00000100;
 17e:	84 e0       	ldi	r24, 0x04	; 4
 180:	88 bb       	out	0x18, r24	; 24
			PORTD = 0b00000100;
 182:	82 bb       	out	0x12, r24	; 18
			break;
 184:	08 95       	ret
			
			case 4:
			PORTB = 0b00001000;
 186:	88 e0       	ldi	r24, 0x08	; 8
 188:	88 bb       	out	0x18, r24	; 24
			PORTD = 0b00001000;
 18a:	82 bb       	out	0x12, r24	; 18
			break;
 18c:	08 95       	ret
			
			case 5:
			PORTB = 0b00001111;
 18e:	8f e0       	ldi	r24, 0x0F	; 15
 190:	88 bb       	out	0x18, r24	; 24
			PORTD = 0b00001111;
 192:	82 bb       	out	0x12, r24	; 18
			break;
 194:	08 95       	ret
			
			case 6:
			PORTB = 0b00001111;
 196:	8f e0       	ldi	r24, 0x0F	; 15
 198:	88 bb       	out	0x18, r24	; 24
			break;
 19a:	08 95       	ret
			
			case 7:
			PORTD = 0b00001111;
 19c:	8f e0       	ldi	r24, 0x0F	; 15
 19e:	82 bb       	out	0x12, r24	; 18
			break;
 1a0:	08 95       	ret
			
			default:
			PORTB = 0b00000000;
 1a2:	18 ba       	out	0x18, r1	; 24
			PORTD = 0b00000000;
 1a4:	12 ba       	out	0x12, r1	; 18
 1a6:	08 95       	ret

000001a8 <init_timer>:



void init_timer(void)
{
		TCCR1A = 0b00000000;
 1a8:	1f bc       	out	0x2f, r1	; 47
		
		OCR1A = 976;
 1aa:	80 ed       	ldi	r24, 0xD0	; 208
 1ac:	93 e0       	ldi	r25, 0x03	; 3
 1ae:	9b bd       	out	0x2b, r25	; 43
 1b0:	8a bd       	out	0x2a, r24	; 42
		TIMSK |= 0b01000000;
 1b2:	89 b7       	in	r24, 0x39	; 57
 1b4:	80 64       	ori	r24, 0x40	; 64
 1b6:	89 bf       	out	0x39, r24	; 57
 1b8:	08 95       	ret

000001ba <init_ports>:
	
}

void init_ports(void)
{
	DDRB = 0b00001111; // setting PORTB PB0-PB3: Output, PB4-PB7: Input
 1ba:	8f e0       	ldi	r24, 0x0F	; 15
 1bc:	87 bb       	out	0x17, r24	; 23
	DDRD = 0b00001111; // setting PORTD PD0-PD3: Output, PD4-PD6: Input
 1be:	81 bb       	out	0x11, r24	; 17
	PORTB = 0b00000000; // Setting power on value portB PB0-PB3:on(0)
 1c0:	18 ba       	out	0x18, r1	; 24
	PORTD = 0b00000000; // Setting power on value portD PD0-PD3:on(0)
 1c2:	12 ba       	out	0x12, r1	; 18
 1c4:	08 95       	ret

000001c6 <init_system>:
}

void init_system(void)
{
	init_timer();
 1c6:	f0 df       	rcall	.-32     	; 0x1a8 <init_timer>
		TIMSK |= 0b01000000;
}

void ext_interrupt_init(void)
{
	GIMSK = 0b00100000;
 1c8:	80 e2       	ldi	r24, 0x20	; 32
 1ca:	8b bf       	out	0x3b, r24	; 59

void init_system(void)
{
	init_timer();
	ext_interrupt_init();
	init_ports();
 1cc:	f6 df       	rcall	.-20     	; 0x1ba <init_ports>
 1ce:	08 95       	ret

000001d0 <main>:



int main(void)
{
	cli();
 1d0:	f8 94       	cli
	init_system();	
 1d2:	f9 df       	rcall	.-14     	; 0x1c6 <init_system>
	sei();
 1d4:	78 94       	sei
	
	
    /* Replace with your application code */
    while (1) 
    {
		start_game_SM();
 1d6:	3e df       	rcall	.-388    	; 0x54 <start_game_SM>
    }
 1d8:	fe cf       	rjmp	.-4      	; 0x1d6 <main+0x6>

000001da <__vector_4>:
	return 0;
}


ISR(TIMER1_COMPA_vect)
{
 1da:	1f 92       	push	r1
 1dc:	0f 92       	push	r0
 1de:	0f b6       	in	r0, 0x3f	; 63
 1e0:	0f 92       	push	r0
 1e2:	11 24       	eor	r1, r1
 1e4:	8f 93       	push	r24
	HWREGTIMERINT = 1;
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	83 bb       	out	0x13, r24	; 19
	
}
 1ea:	8f 91       	pop	r24
 1ec:	0f 90       	pop	r0
 1ee:	0f be       	out	0x3f, r0	; 63
 1f0:	0f 90       	pop	r0
 1f2:	1f 90       	pop	r1
 1f4:	18 95       	reti

000001f6 <__vector_11>:


ISR(PCINT_vect)
{
 1f6:	1f 92       	push	r1
 1f8:	0f 92       	push	r0
 1fa:	0f b6       	in	r0, 0x3f	; 63
 1fc:	0f 92       	push	r0
 1fe:	11 24       	eor	r1, r1
 200:	8f 93       	push	r24
	HWREGEXTINT = 1;
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	84 bb       	out	0x14, r24	; 20
	
	
	
 206:	8f 91       	pop	r24
 208:	0f 90       	pop	r0
 20a:	0f be       	out	0x3f, r0	; 63
 20c:	0f 90       	pop	r0
 20e:	1f 90       	pop	r1
 210:	18 95       	reti

00000212 <_exit>:
 212:	f8 94       	cli

00000214 <__stop_program>:
 214:	ff cf       	rjmp	.-2      	; 0x214 <__stop_program>
